%%-*- mode: erlang -*-
%% emqx_rabbitmq config mapping
{mapping, "rabbitmq.host", "emqx_rabbitmq.server", [
  {datatype, string}
]}.

{mapping, "rabbitmq.port", "emqx_rabbitmq.server", [
  {datatype, integer}
]}.

{mapping, "rabbitmq.username", "emqx_rabbitmq.server", [
  {default, "guest"},
  {datatype, string}
]}.

{mapping, "rabbitmq.password", "emqx_rabbitmq.server", [
  {default, "guest"},
  {datatype, string}
]}.

{mapping, "rabbitmq.pool", "emqx_rabbitmq.server", [
  {default, 1},
  {datatype, integer}
]}.

{mapping, "rabbitmq.reconnect", "emqx_rabbitmq.server", [
  {default, 3},
  {datatype, integer}
]}.

{mapping, "rabbitmq.client.connected", "emqx_rabbitmq.client_connected", [
  {default, on},
  {datatype, flag}
]}.

{mapping, "rabbitmq.client.disconnected", "emqx_rabbitmq.client_disconnected", [
  {default, on},
  {datatype, flag}
]}.

{mapping, "rabbitmq.message.publish", "emqx_rabbitmq.message_publish", [
  {default, on},
  {datatype, flag}
]}.

{mapping, "rabbitmq.exchange", "emqx_rabbitmq.exchange", [
  {default, "mqtt.events"},
  {datatype, string}
]}.

{translation, "emqx_rabbitmq.exchange", fun(Conf) ->
      list_to_binary(cuttlefish:conf_get("rabbitmq.exchange", Conf))
end}.

{translation, "emqx_rabbitmq.server", fun(Conf) ->
    Pool = cuttlefish:conf_get("rabbitmq.pool", Conf),
    Host = cuttlefish:conf_get("rabbitmq.host", Conf),
    Port = cuttlefish:conf_get("rabbitmq.port", Conf),
    Username = list_to_binary(cuttlefish:conf_get("rabbitmq.username", Conf)),
    Password = list_to_binary(cuttlefish:conf_get("rabbitmq.password", Conf)),
    ReconnSecs = cuttlefish:conf_get("rabbitmq.reconnect", Conf),
    Reconn = case ReconnSecs of
                0 -> false;
                _ -> ReconnSecs
             end,
    [{pool_size, Pool},
     {host, Host},
     {port, Port},
     {auto_reconnect, Reconn},
     {username, Username},
     {password, Password}
    ]
end}.
